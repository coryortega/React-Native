{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _expoStatusBar = require(\"expo-status-bar\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _useCachedResources = _interopRequireDefault(require(\"./hooks/useCachedResources\"));\n\nvar _useColorScheme = _interopRequireDefault(require(\"./hooks/useColorScheme\"));\n\nvar _navigation = _interopRequireDefault(require(\"./navigation\"));\n\nvar _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/App.tsx\";\n\nfunction App() {\n  var _React$useState = _react.default.useState(null),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  var isLoadingComplete = (0, _useCachedResources.default)();\n  var colorScheme = (0, _useColorScheme.default)();\n\n  var getData = function getData() {\n    var value;\n    return _regenerator.default.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('code'));\n\n          case 3:\n            value = _context.sent;\n\n            if (!(value !== null)) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(value);\n            return _context.abrupt(\"return\", value);\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  getData().then(function (res) {\n    if (res) {\n      setUser(res);\n    }\n  });\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return _react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n      __self: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_navigation.default, {\n      colorScheme: colorScheme,\n      __self: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), _react.default.createElement(_expoStatusBar.StatusBar, {\n      __self: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/App.tsx"],"names":["App","React","useState","user","setUser","isLoadingComplete","colorScheme","getData","AsyncStorage","getItem","value","console","log","then","res"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGe,SAASA,GAAT,GAAe;AAAA,wBAOJC,eAAMC,QAAN,CAAgC,IAAhC,CAPI;AAAA;AAAA,MAOrBC,IAPqB;AAAA,MAOfC,OAPe;;AAS5B,MAAMC,iBAAiB,GAAG,kCAA1B;AACA,MAAMC,WAAW,GAAG,8BAApB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEQC,sBAAaC,OAAb,CAAqB,MAArB,CAFR;;AAAA;AAENC,YAAAA,KAFM;;AAAA,kBAGTA,KAAK,KAAK,IAHD;AAAA;AAAA;AAAA;;AAIVC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAJU,6CAKHA,KALG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQZC,YAAAA,OAAO,CAACC,GAAR;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAYAL,EAAAA,OAAO,GAAGM,IAAV,CAAe,UAAAC,GAAG,EAAI;AACpB,QAAIA,GAAJ,EAAS;AACPV,MAAAA,OAAO,CAACU,GAAD,CAAP;AACD;AACF,GAJD;;AAMA,MAAI,CAACT,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,6BAAC,4CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,mBAAD;AAAY,MAAA,WAAW,EAAEC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,6BAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;AACF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function App() {\n  interface UserData {\n    username: string;\n    password: string;\n    prevState: null\n  }\n\n  const [user, setUser] = React.useState<UserData | null>(null);\n\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  const getData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('code')\n      if(value !== null) {\n        console.log(value)\n        return value\n      }\n    } catch(e) {\n      console.log(e)\n    }\n  }\n\n  getData().then(res => {\n    if (res) {\n      setUser(res)\n    }\n  })\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}