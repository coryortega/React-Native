{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Navigation;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _NotFoundScreen = _interopRequireDefault(require(\"../screens/NotFoundScreen\"));\n\nvar _ModalScreen = _interopRequireDefault(require(\"../screens/ModalScreen\"));\n\nvar _LoginScreen = _interopRequireDefault(require(\"../screens/LoginScreen\"));\n\nvar _BottomTabNavigator = _interopRequireDefault(require(\"./BottomTabNavigator\"));\n\nvar _LinkingConfiguration = _interopRequireDefault(require(\"./LinkingConfiguration\"));\n\nvar _index = require(\"react-native-web/dist/index\");\n\nvar _context4 = require(\"../components/context\");\n\nvar _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/navigation/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  var initialLoginState = {\n    isLoading: true,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(token) {\n        return _regenerator.default.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regenerator.default.awrap(_index.AsyncStorage.setItem('token', token));\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGIN',\n                  token: token\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signOut: function signOut() {\n        return _regenerator.default.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regenerator.default.awrap(_index.AsyncStorage.removeItem('token'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    var userToken = null;\n    setTimeout(function _callee() {\n      return _regenerator.default.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regenerator.default.awrap(_index.AsyncStorage.getItem('token'));\n\n            case 3:\n              userToken = _context3.sent;\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 9:\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: userToken\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    }, 1000);\n  }, []);\n  return React.createElement(_context4.AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, React.createElement(_native.NavigationContainer, {\n    linking: _LinkingConfiguration.default,\n    theme: colorScheme === 'dark' ? _native.DarkTheme : _native.DefaultTheme,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, loginState.userToken !== null ? React.createElement(RootNavigator, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }) : React.createElement(_LoginScreen.default, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: _BottomTabNavigator.default,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: _NotFoundScreen.default,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MyModal\",\n    component: _ModalScreen.default,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: _LoginScreen.default,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/navigation/index.tsx"],"names":["Navigation","colorScheme","initialLoginState","isLoading","userToken","loginReducer","prevState","action","type","token","userName","id","React","useReducer","loginState","dispatch","authContext","useMemo","signIn","AsyncStorage","setItem","console","log","signOut","removeItem","useEffect","setTimeout","getItem","LinkingConfiguration","DarkTheme","DefaultTheme","Stack","RootNavigator","headerShown","BottomTabNavigator","NotFoundScreen","title","ModalScreen","LoginScreen"],"mappings":"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","sourcesContent":["import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ModalScreen from '../screens/ModalScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport { RootStackParamList } from '../types';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport { AsyncStorage } from 'react-native';\nimport { AuthContext } from '../components/context';\n\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n\n  const initialLoginState = {\n    isLoading: true,\n    userToken: null\n  };\n  \n  const loginReducer = (prevState: any, action: any) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN':\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT':\n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: async(token: string) => {\n      try {\n        await AsyncStorage.setItem('token', token)\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({type: 'LOGIN', token: token})\n    },\n    signOut: async() => {\n      try {\n        await AsyncStorage.removeItem('token');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({type: 'LOGOUT'})\n    }\n  }), []);\n\n  React.useEffect(() => {\n    let userToken: any = null;\n\n    setTimeout(async() => {\n      try {\n        userToken = await AsyncStorage.getItem('token')\n      } catch(e) {\n        console.log(e)\n      }\n      dispatch({ type: 'RETRIEVE_TOKEN', token: userToken})\n    }, 1000)\n  }, [])\n\n  \n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer\n        linking={LinkingConfiguration}\n        theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n          {loginState.userToken !== null ? (\n            <RootNavigator/>\n          ) :\n          <LoginScreen/>\n          }\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Screen name=\"MyModal\" component={ModalScreen} />\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}