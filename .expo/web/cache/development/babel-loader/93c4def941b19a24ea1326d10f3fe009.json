{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchToken = fetchToken;\nexports.fetchTokenAsync = fetchTokenAsync;\nexports.fetchDevicesAsync = fetchDevicesAsync;\nexports.playTrackAsync = playTrackAsync;\nexports.pauseAsync = pauseAsync;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _spotifyWebApiJs = _interopRequireDefault(require(\"spotify-web-api-js\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar TOKEN_ENDPOINT = \"https://accounts.spotify.com/api/token\";\n\nfunction fetchToken(code) {\n  var headers, data, response;\n  return _regenerator.default.async(function fetchToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          headers = {\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            auth: {\n              username: '5d228af4d8fe45d5b1bb9702187643c0',\n              password: '2e64ed63024a402d81fde645767a3680'\n            }\n          };\n          data = {\n            grant_type: 'client_credentials',\n            code: code,\n            scopes: \"streaming user-read-currently-playing user-read-playback-state user-library-read user-library-modify user-modify-playback-state user-read-email user-read-private playlist-modify-public playlist-modify-private\"\n          };\n          _context.next = 4;\n          return _regenerator.default.awrap(_axios.default.post('https://accounts.spotify.com/api/token', _qs.default.stringify(data), headers));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regenerator.default.awrap(response);\n\n        case 7:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction fetchTokenAsync(code) {\n  var response;\n  return _regenerator.default.async(function fetchTokenAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"this is code in flask call\", code);\n          _context2.next = 3;\n          return _regenerator.default.awrap(fetch(TOKEN_ENDPOINT, {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              code: code\n            })\n          }));\n\n        case 3:\n          response = _context2.sent;\n          console.log(response);\n          _context2.next = 7;\n          return _regenerator.default.awrap(response.json());\n\n        case 7:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction fetchDevicesAsync() {\n  var client, result;\n  return _regenerator.default.async(function fetchDevicesAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regenerator.default.awrap(_getClientAsync());\n\n        case 2:\n          client = _context3.sent;\n          _context3.next = 5;\n          return _regenerator.default.awrap(client.getMyDevices());\n\n        case 5:\n          result = _context3.sent;\n          return _context3.abrupt(\"return\", result.devices.map(function (d) {\n            return {\n              id: d.id,\n              name: d.name,\n              isActive: d.is_active,\n              isRestricted: d.is_restricted,\n              type: d.type\n            };\n          }).sort(function (a, b) {\n            return a.isActive && b.isActive ? 0 : -1;\n          }));\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction playTrackAsync(_ref) {\n  var uri, deviceId, time, client;\n  return _regenerator.default.async(function playTrackAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          uri = _ref.uri, deviceId = _ref.deviceId, time = _ref.time;\n          _context4.next = 3;\n          return _regenerator.default.awrap(_getClientAsync());\n\n        case 3:\n          client = _context4.sent;\n          _context4.next = 6;\n          return _regenerator.default.awrap(client.play({\n            uris: [uri],\n            device_id: deviceId,\n            position_ms: time != null ? time : 0\n          }));\n\n        case 6:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction pauseAsync() {\n  var client;\n  return _regenerator.default.async(function pauseAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regenerator.default.awrap(_getClientAsync());\n\n        case 2:\n          client = _context5.sent;\n          _context5.next = 5;\n          return _regenerator.default.awrap(client.pause());\n\n        case 5:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction _getClientAsync() {\n  var newToken, client;\n  return _regenerator.default.async(function _getClientAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          console.log(\"getting client...\");\n          _context6.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem('token'));\n\n        case 3:\n          newToken = _context6.sent;\n          console.log(\" this is new token...\", newToken);\n          client = new _spotifyWebApiJs.default();\n          client.setAccessToken(\"newToken\");\n          console.log(\"this is client...\", client);\n          return _context6.abrupt(\"return\", client);\n\n        case 9:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/api/index.ts"],"names":["TOKEN_ENDPOINT","fetchToken","code","headers","Accept","auth","username","password","data","grant_type","scopes","axios","post","qs","stringify","response","fetchTokenAsync","console","log","fetch","method","body","JSON","json","fetchDevicesAsync","_getClientAsync","client","getMyDevices","result","devices","map","d","id","name","isActive","is_active","isRestricted","is_restricted","type","sort","a","b","playTrackAsync","uri","deviceId","time","play","uris","device_id","position_ms","pauseAsync","pause","AsyncStorage","getItem","newToken","SpotifyWebApi","setAccessToken"],"mappings":"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","sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport qs from 'qs';\n\n// const TOKEN_ENDPOINT = \"http://127.0.0.1:5000/token\";\nconst TOKEN_ENDPOINT = \"https://accounts.spotify.com/api/token\";\n\nexport type Device = {\n    id: string | null;\n    name: string;\n    type:\n      | \"Computer\"\n      | \"Tablet\"\n      | \"Smartphone\"\n      | \"Speaker\"\n      | \"TV\"\n      | \"AVR\"\n      | \"STB\"\n      | \"AudioDongle\"\n      | \"GameConsole\"\n      | \"CastVideo\"\n      | \"CastAudio\"\n      | \"Automobile\"\n      | \"Unknown\";\n    isActive: boolean;\n    isRestricted: boolean;\n  };\n\nexport async function fetchToken(code: object) {\n    const headers = {\n        headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        auth: {\n        username: '5d228af4d8fe45d5b1bb9702187643c0',\n        password: '2e64ed63024a402d81fde645767a3680',\n        },\n    };\n    const data = {\n        grant_type: 'client_credentials',\n        code: code,\n        scopes:\"streaming user-read-currently-playing user-read-playback-state user-library-read user-library-modify user-modify-playback-state user-read-email user-read-private playlist-modify-public playlist-modify-private\"\n    };\n\n    // try {\n        const response = await axios.post('https://accounts.spotify.com/api/token', qs.stringify(data), headers);\n        return await response;\n    // } catch (err) {\n    //     console.log(err)\n    // }\n\n    // .then(res => {\n    //     console.log(\"response 2 =\", res)\n    //     const token = res.data;\n    //     console.log(\"this is token:\", token)\n    //     signIn(token.access_token);\n    //     // props.navigation.navigate('Login')\n    // })\n    // .catch(err => {\n    //     console.log(err)\n    // })\n}\n\nexport async function fetchTokenAsync(code: object) {\n    console.log(\"this is code in flask call\", code)\n    const response = await fetch(TOKEN_ENDPOINT, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body:\n      JSON.stringify({\n        code\n      }),\n    });\n    console.log(response);\n    return await response.json();\n  }\n\n  export async function fetchDevicesAsync(): Promise<any> {\n    const client = await _getClientAsync();\n    const result = await client.getMyDevices();\n    return result.devices\n      .map(\n        (d: typeof result.devices[0]) =>\n          ({\n            id: d.id,\n            name: d.name,\n            isActive: d.is_active,\n            isRestricted: d.is_restricted,\n            type: d.type,\n          } as Device)\n      )\n      .sort((a: Device, b: Device) => (a.isActive && b.isActive ? 0 : -1));\n  }\n\n  export async function playTrackAsync({\n    uri,\n    deviceId,\n    time,\n  }: {\n    uri: string;\n    deviceId: string;\n    time?: number;\n  }) {\n    const client = await _getClientAsync();\n    return await client.play({\n      uris: [uri],\n      device_id: deviceId,\n      position_ms: time ?? 0,\n    });\n  }\n\n  export async function pauseAsync(): Promise<void> {\n    const client = await _getClientAsync();\n    return await client.pause();\n  }\n\n  async function _getClientAsync() {\n      console.log(\"getting client...\")\n    const newToken = await AsyncStorage.getItem('token')\n    console.log(\" this is new token...\", newToken)\n    const client = new SpotifyWebApi();\n    client.setAccessToken(`newToken`);\n    console.log(\"this is client...\", client)\n    return client;\n  }"]},"metadata":{},"sourceType":"script"}