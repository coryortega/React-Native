{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useThemeColor = useThemeColor;\nexports.Text = Text;\nexports.View = View;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _useColorScheme = _interopRequireDefault(require(\"../hooks/useColorScheme\"));\n\nvar _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/components/Themed.tsx\";\n\nfunction useThemeColor(props, colorName) {\n  var theme = (0, _useColorScheme.default)();\n  var colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return _Colors.default[theme][colorName];\n  }\n}\n\nfunction Text(props) {\n  var style = props.style,\n      lightColor = props.lightColor,\n      darkColor = props.darkColor,\n      otherProps = (0, _objectWithoutProperties2.default)(props, [\"style\", \"lightColor\", \"darkColor\"]);\n  var color = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, 'text');\n  return React.createElement(_Text.default, (0, _extends2.default)({\n    style: [{\n      color: color\n    }, style]\n  }, otherProps, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction View(props) {\n  var style = props.style,\n      lightColor = props.lightColor,\n      darkColor = props.darkColor,\n      otherProps = (0, _objectWithoutProperties2.default)(props, [\"style\", \"lightColor\", \"darkColor\"]);\n  var backgroundColor = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, 'background');\n  return React.createElement(_View.default, (0, _extends2.default)({\n    style: [{\n      backgroundColor: backgroundColor\n    }, style]\n  }, otherProps, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/components/Themed.tsx"],"names":["useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","light","dark","View","backgroundColor"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;AAGA;;AACA;;;;AAEO,SAASA,aAAT,CACLC,KADK,EAELC,SAFK,EAGL;AACA,MAAMC,KAAK,GAAG,8BAAd;AACA,MAAMC,cAAc,GAAGH,KAAK,CAACE,KAAD,CAA5B;;AAEA,MAAIC,cAAJ,EAAoB;AAClB,WAAOA,cAAP;AACD,GAFD,MAEO;AACL,WAAOC,gBAAOF,KAAP,EAAcD,SAAd,CAAP;AACD;AACF;;AAUM,SAASI,IAAT,CAAcL,KAAd,EAAgC;AAAA,MAC7BM,KAD6B,GACmBN,KADnB,CAC7BM,KAD6B;AAAA,MACtBC,UADsB,GACmBP,KADnB,CACtBO,UADsB;AAAA,MACVC,SADU,GACmBR,KADnB,CACVQ,SADU;AAAA,MACIC,UADJ,0CACmBT,KADnB;AAErC,MAAMU,KAAK,GAAGX,aAAa,CAAC;AAAEY,IAAAA,KAAK,EAAEJ,UAAT;AAAqBK,IAAAA,IAAI,EAAEJ;AAA3B,GAAD,EAAyC,MAAzC,CAA3B;AAEA,SAAO,oBAAC,aAAD;AAAa,IAAA,KAAK,EAAE,CAAC;AAAEE,MAAAA,KAAK,EAALA;AAAF,KAAD,EAAYJ,KAAZ;AAApB,KAA4CG,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAEM,SAASI,IAAT,CAAcb,KAAd,EAAgC;AAAA,MAC7BM,KAD6B,GACmBN,KADnB,CAC7BM,KAD6B;AAAA,MACtBC,UADsB,GACmBP,KADnB,CACtBO,UADsB;AAAA,MACVC,SADU,GACmBR,KADnB,CACVQ,SADU;AAAA,MACIC,UADJ,0CACmBT,KADnB;AAErC,MAAMc,eAAe,GAAGf,aAAa,CAAC;AAAEY,IAAAA,KAAK,EAAEJ,UAAT;AAAqBK,IAAAA,IAAI,EAAEJ;AAA3B,GAAD,EAAyC,YAAzC,CAArC;AACA,SAAO,oBAAC,aAAD;AAAa,IAAA,KAAK,EAAE,CAAC;AAAEM,MAAAA,eAAe,EAAfA;AAAF,KAAD,EAAsBR,KAAtB;AAApB,KAAsDG,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n"]},"metadata":{},"sourceType":"script"}