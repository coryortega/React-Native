{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Login;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _LoginButton = _interopRequireDefault(require(\"../components/LoginButton\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _EditScreenInfo = _interopRequireDefault(require(\"../components/EditScreenInfo\"));\n\nvar _Themed = require(\"../components/Themed\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx\";\n\nvar getData = function getData() {\n  var value;\n  return _regenerator.default.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem('code'));\n\n        case 3:\n          value = _context.sent;\n\n          if (!(value !== null)) {\n            _context.next = 7;\n            break;\n          }\n\n          console.log(value);\n          return _context.abrupt(\"return\", value);\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\n\nvar logOut = function logOut() {\n  return _regenerator.default.async(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.removeItem(\"code\"));\n\n        case 3:\n          setLoggedIn();\n          return _context2.abrupt(\"return\", true);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", false);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nfunction Login() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      loggedIn = _React$useState2[0],\n      setLoggedIn = _React$useState2[1];\n\n  getData().then(function (res) {\n    if (res !== null) {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  });\n  console.log(loggedIn);\n  return React.createElement(_Themed.View, {\n    style: styles.container,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, loggedIn ? React.createElement(_Button.default, {\n    onPress: function onPress() {\n      return removeItemValue(\"code\").then(function (res) {\n        return console.log(res);\n      });\n    },\n    title: \"Log Out\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }) : React.createElement(_LoginButton.default, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 117\n    }\n  }), React.createElement(_Themed.View, {\n    style: styles.separator,\n    lightColor: \"#eee\",\n    darkColor: \"rgba(255,255,255,0.1)\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(_EditScreenInfo.default, {\n    path: \"/screens/TabTwoScreen.tsx\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx"],"names":["getData","AsyncStorage","getItem","value","console","log","logOut","removeItem","setLoggedIn","Login","React","useState","loggedIn","then","res","styles","container","removeItemValue","separator","StyleSheet","create","flex","alignItems","justifyContent","title","fontSize","fontWeight","marginVertical","height","width"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;AAGA;;AACA;;AAEA;;;;AAIA,IAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEQC,sBAAaC,OAAb,CAAqB,MAArB,CAFR;;AAAA;AAENC,UAAAA,KAFM;;AAAA,gBAGTA,KAAK,KAAK,IAHD;AAAA;AAAA;AAAA;;AAIVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAJU,2CAKHA,KALG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQZC,UAAAA,OAAO,CAACC,GAAR;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAYA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEHL,sBAAaM,UAAb,CAAwB,MAAxB,CAFG;;AAAA;AAGTC,UAAAA,WAAW;AAHF,4CAIF,IAJE;;AAAA;AAAA;AAAA;AAAA,4CAOF,KAPE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AAYe,SAASC,KAAT,GAAiB;AAAA,wBAEGC,KAAK,CAACC,QAAN,CAAe,KAAf,CAFH;AAAA;AAAA,MAEvBC,QAFuB;AAAA,MAEbJ,WAFa;;AAI9BR,EAAAA,OAAO,GAAGa,IAAV,CAAe,UAAAC,GAAG,EAAI;AACpB,QAAGA,GAAG,KAAK,IAAX,EAAgB;AACdN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAND;AAOAJ,EAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACA,SACE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGJ,QAAQ,GAAG,oBAAC,eAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMK,eAAe,CAAC,MAAD,CAAf,CAAwBJ,IAAxB,CAA6B,UAAAC,GAAG;AAAA,eAAIV,OAAO,CAACC,GAAR,CAAYS,GAAZ,CAAJ;AAAA,OAAhC,CAAN;AAAA,KAAjB;AAA8E,IAAA,KAAK,EAAC,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqG,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhH,EAIE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACG,SAApB;AAA+B,IAAA,UAAU,EAAC,MAA1C;AAAiD,IAAA,SAAS,EAAC,uBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,uBAAD;AAAgB,IAAA,IAAI,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAED,IAAMH,MAAM,GAAGI,oBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAVoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport LoginButton from '../components/LoginButton';\nimport { StyleSheet, Button } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// import authHandler from \"../components/utils/authenticationHandler\";\n\nconst getData = async () => {\n  try {\n    const value = await AsyncStorage.getItem('code')\n    if(value !== null) {\n      console.log(value)\n      return value\n    }\n  } catch(e) {\n    console.log(e)\n  }\n}\n\nconst logOut = async () => {\n  try {\n      await AsyncStorage.removeItem(\"code\");\n      setLoggedIn()\n      return true;\n  }\n  catch(exception) {\n      return false;\n  }\n}\n\n\nexport default function Login() {\n\n  const [loggedIn, setLoggedIn ] = React.useState(false)\n\n  getData().then(res => {\n    if(res !== null){\n      setLoggedIn(true)\n    } else {\n      setLoggedIn(false)\n    }\n  })\n  console.log(loggedIn)\n  return (\n    <View style={styles.container}>\n      {/* <Text style={styles.title}>Login</Text> */}\n      {loggedIn ? <Button onPress={() => removeItemValue(\"code\").then(res => console.log(res))} title=\"Log Out\"/> : <LoginButton/>}\n      {/* <LoginButton/> */}\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabTwoScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"script"}