{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _LoginButton = _interopRequireDefault(require(\"../components/LoginButton\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _Themed = require(\"../components/Themed\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      loggedIn = _React$useState2[0],\n      setLoggedIn = _React$useState2[1];\n\n  var getData = function getData() {\n    var value;\n    return _regenerator.default.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('code'));\n\n          case 3:\n            value = _context.sent;\n\n            if (!(value !== null)) {\n              _context.next = 7;\n              break;\n            }\n\n            console.log(value);\n            return _context.abrupt(\"return\", value);\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var logOut = function logOut() {\n    return _regenerator.default.async(function logOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.removeItem(\"code\"));\n\n          case 3:\n            setLoggedIn(false);\n            return _context2.abrupt(\"return\", true);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", false);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  React.useEffect(function () {\n    getData().then(function (res) {\n      if (res) {\n        console.log(res);\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n    });\n  });\n  console.log(loggedIn);\n  return React.createElement(_Themed.View, {\n    style: styles.container,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, loggedIn ? React.createElement(_Button.default, {\n    onPress: function onPress() {\n      return logOut().then(function (res) {\n        return console.log(res);\n      });\n    },\n    title: \"Log Out\",\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }) : React.createElement(_LoginButton.default, {\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 102\n    }\n  }), React.createElement(_Themed.View, {\n    style: styles.separator,\n    lightColor: \"#eee\",\n    darkColor: \"rgba(255,255,255,0.1)\",\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx"],"names":["Login","navigation","React","useState","loggedIn","setLoggedIn","getData","AsyncStorage","getItem","value","console","log","logOut","removeItem","useEffect","then","res","styles","container","separator","StyleSheet","create","flex","alignItems","justifyContent","title","fontSize","fontWeight","marginVertical","height","width"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;AAIA;;AAEA;;;;;AASA,IAAMA,KAAmB,GAAG,SAAtBA,KAAsB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,wBAEbC,KAAK,CAACC,QAAN,CAAe,KAAf,CAFa;AAAA;AAAA,MAEvCC,QAFuC;AAAA,MAE7BC,WAF6B;;AAI9C,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEQC,sBAAaC,OAAb,CAAqB,MAArB,CAFR;;AAAA;AAENC,YAAAA,KAFM;;AAAA,kBAGTA,KAAK,KAAK,IAHD;AAAA;AAAA;AAAA;;AAIVC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAJU,6CAKHA,KALG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQZC,YAAAA,OAAO,CAACC,GAAR;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAYA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEHL,sBAAaM,UAAb,CAAwB,MAAxB,CAFG;;AAAA;AAGTR,YAAAA,WAAW,CAAC,KAAD,CAAX;AAHS,8CAIF,IAJE;;AAAA;AAAA;AAAA;AAAA,8CAOF,KAPE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAWAH,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpBR,IAAAA,OAAO,GAAGS,IAAV,CAAe,UAAAC,GAAG,EAAI;AACpB,UAAGA,GAAH,EAAO;AACLN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAX,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAHD,MAGO;AACLA,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,KAPD;AAQD,GATD;AAaAK,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,SACE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QAAQ,GAAG,oBAAC,eAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMQ,MAAM,GAAGG,IAAT,CAAc,UAAAC,GAAG;AAAA,eAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ;AAAA,OAAjB,CAAN;AAAA,KAAjB;AAA+D,IAAA,KAAK,EAAC,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAsF,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjG,EAGE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACE,SAApB;AAA+B,IAAA,UAAU,EAAC,MAA1C;AAAiD,IAAA,SAAS,EAAC,uBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAhDD;;AAkDA,IAAMF,MAAM,GAAGG,oBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAVoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport LoginButton from '../components/LoginButton';\nimport { StyleSheet, Button } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// import authHandler from \"../components/utils/authenticationHandler\";\n\ntype IProps = {\n  children: navigation;\n  // any other props that come into the component\n}\n\nconst Login: React.FC<{}> = ({ navigation }) => {\n\n  const [loggedIn, setLoggedIn ] = React.useState(false)\n\n  const getData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('code')\n      if(value !== null) {\n        console.log(value)\n        return value\n      }\n    } catch(e) {\n      console.log(e)\n    }\n  }\n  \n  const logOut = async () => {\n    try {\n        await AsyncStorage.removeItem(\"code\");\n        setLoggedIn(false)\n        return true;\n    }\n    catch(exception) {\n        return false;\n    }\n  }\n\n  React.useEffect(() => {\n    getData().then(res => {\n      if(res){\n        console.log(res)\n        setLoggedIn(true)\n      } else {\n        setLoggedIn(false)\n      }\n    })\n  })\n\n\n\n  console.log(loggedIn)\n  return (\n    <View style={styles.container}>\n      {loggedIn ? <Button onPress={() => logOut().then(res => console.log(res))} title=\"Log Out\"/> : <LoginButton/>}\n      {/* <LoginButton/> */}\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"script"}