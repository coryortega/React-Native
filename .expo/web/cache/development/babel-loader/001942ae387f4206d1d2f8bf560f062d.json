{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Navigation;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _NotFoundScreen = _interopRequireDefault(require(\"../screens/NotFoundScreen\"));\n\nvar _ModalScreen = _interopRequireDefault(require(\"../screens/ModalScreen\"));\n\nvar _LoginScreen = _interopRequireDefault(require(\"../screens/LoginScreen\"));\n\nvar _BottomTabNavigator = _interopRequireDefault(require(\"./BottomTabNavigator\"));\n\nvar _LinkingConfiguration = _interopRequireDefault(require(\"./LinkingConfiguration\"));\n\nvar _context = require(\"../components/context\");\n\nvar _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/navigation/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  var initialLoginState = {\n    isLoadin: true,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(token) {\n        setUserToken(token);\n        setIsLoading(false);\n        dispatch({\n          type: 'LOGIN',\n          token: token\n        });\n      },\n      signOut: function signOut() {\n        setUserToken(null);\n        setIsLoading(false);\n      }\n    };\n  }, []);\n  return React.createElement(_context.AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, React.createElement(_native.NavigationContainer, {\n    linking: _LinkingConfiguration.default,\n    theme: colorScheme === 'dark' ? _native.DarkTheme : _native.DefaultTheme,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, userToken !== null ? React.createElement(RootNavigator, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }) : React.createElement(_LoginScreen.default, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: _BottomTabNavigator.default,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: _NotFoundScreen.default,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"MyModal\",\n    component: _ModalScreen.default,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/navigation/index.tsx"],"names":["Navigation","colorScheme","initialLoginState","isLoadin","userToken","loginReducer","prevState","action","type","token","isLoading","userName","id","React","useReducer","loginState","dispatch","authContext","useMemo","signIn","setUserToken","setIsLoading","signOut","LinkingConfiguration","DarkTheme","DefaultTheme","Stack","RootNavigator","headerShown","BottomTabNavigator","NotFoundScreen","title","ModalScreen"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;AAKe,SAASA,UAAT,OAAuE;AAAA,MAAjDC,WAAiD,QAAjDA,WAAiD;AAIpF,MAAMC,iBAAiB,GAAG;AACxBC,IAAAA,QAAQ,EAAE,IADc;AAExBC,IAAAA,SAAS,EAAE;AAFa,GAA1B;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAYC,MAAZ,EAAuB;AAC1C,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,gBAAL;AACE,+CACKF,SADL;AAEEF,UAAAA,SAAS,EAAEG,MAAM,CAACE,KAFpB;AAGEC,UAAAA,SAAS,EAAE;AAHb;;AAKF,WAAK,OAAL;AACE,+CACKJ,SADL;AAEEK,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,EAFnB;AAGER,UAAAA,SAAS,EAAEG,MAAM,CAACE,KAHpB;AAIEC,UAAAA,SAAS,EAAE;AAJb;;AAMF,WAAK,QAAL;AACE,+CACKJ,SADL;AAEEK,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,EAFnB;AAGER,UAAAA,SAAS,EAAEG,MAAM,CAACE,KAHpB;AAIEC,UAAAA,SAAS,EAAE;AAJb;AAfJ;AAsBD,GAvBD;;AAToF,0BAkCrDG,KAAK,CAACC,UAAN,CAAiBT,YAAjB,EAA+BH,iBAA/B,CAlCqD;AAAA;AAAA,MAkC7Ea,UAlC6E;AAAA,MAkCjEC,QAlCiE;;AAoCpF,MAAMC,WAAW,GAAGJ,KAAK,CAACK,OAAN,CAAc;AAAA,WAAO;AACvCC,MAAAA,MAAM,EAAE,gBAACV,KAAD,EAAW;AACjBW,QAAAA,YAAY,CAACX,KAAD,CAAZ;AACAY,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAL,QAAAA,QAAQ,CAAC;AAACR,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,KAAK,EAALA;AAAhB,SAAD,CAAR;AACD,OANsC;AAOvCa,MAAAA,OAAO,EAAE,mBAAM;AACbF,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AAVsC,KAAP;AAAA,GAAd,EAWhB,EAXgB,CAApB;AAmCA,SACE,oBAAC,oBAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEJ,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,2BAAD;AACE,IAAA,OAAO,EAAEM,6BADX;AAEE,IAAA,KAAK,EAAEtB,WAAW,KAAK,MAAhB,GAAyBuB,iBAAzB,GAAqCC,oBAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKrB,SAAS,KAAK,IAAd,GACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGD,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF,CADF;AAgBD;;AAID,IAAMsB,KAAK,GAAG,kCAAd;;AAEA,SAASC,aAAT,GAAyB;AACvB,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEC,uBAAzC;AAAyD,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEC,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD","sourcesContent":["import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\nimport { Text, View } from '../components/Themed';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport ModalScreen from '../screens/ModalScreen';\nimport LoginScreen from '../screens/LoginScreen';\nimport { RootStackParamList } from '../types';\nimport BottomTabNavigator from './BottomTabNavigator';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext } from '../components/context';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  // const [isLoading, setIsLoading] = React.useState(true);\n  // const [userToken, setUserToken] = React.useState<any | null>(null);\n\n  const initialLoginState = {\n    isLoadin: true,\n    userToken: null\n  };\n\n  const loginReducer = (prevState, action) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN':\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT':\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: (token) => {\n      setUserToken(token);\n      setIsLoading(false);\n\n      dispatch({type: 'LOGIN', token})\n    },\n    signOut: () => {\n      setUserToken(null);\n      setIsLoading(false);\n    }\n  }), []);\n\n  // const getData = async () => {\n  //   try {\n  //     const value = await AsyncStorage.getItem('token')\n  //     if(value !== null) {\n  //       return value\n  //     }\n  //   } catch(e) {\n  //     console.log(e)\n  //   }\n  // }\n\n  // React.useEffect(() => {\n  //   getData().then(res => {\n  //     console.log(res);\n  //     setUserToken(res)\n  //     setIsLoading(false);\n  //   }).catch(err => {\n  //     console.log(err)\n  //     setIsLoading(false)\n  //   })\n  // }, [])\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer\n        linking={LinkingConfiguration}\n        theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n          {userToken !== null ? (\n            <RootNavigator />\n          ) :\n          <LoginScreen/>\n          // <View style={{flex:1,justifyContent:'center', alignItems:'center'}}>\n          // <LoginButton/>\n          // </View>\n          }\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Screen name=\"MyModal\" component={ModalScreen} />\n    </Stack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}