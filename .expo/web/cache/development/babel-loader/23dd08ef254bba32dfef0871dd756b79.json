{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar WebBrowser = _interopRequireWildcard(require(\"expo-web-browser\"));\n\nvar _expoAuthSession = require(\"expo-auth-session\");\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _context = require(\"./context\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/components/LoginButton.tsx\";\n\nWebBrowser.maybeCompleteAuthSession();\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\n\nvar LoginButton = function LoginButton() {\n  var _React$useContext = React.useContext(_context.AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var _useAuthRequest = (0, _expoAuthSession.useAuthRequest)({\n    clientId: '5d228af4d8fe45d5b1bb9702187643c0',\n    scopes: ['user-read-email', 'playlist-modify-public'],\n    usePKCE: false,\n    redirectUri: 'http://localhost:19006/'\n  }, discovery),\n      _useAuthRequest2 = (0, _slicedToArray2.default)(_useAuthRequest, 3),\n      request = _useAuthRequest2[0],\n      response = _useAuthRequest2[1],\n      promptAsync = _useAuthRequest2[2];\n\n  React.useEffect(function () {\n    console.log(response);\n\n    if ((response == null ? void 0 : response.type) === 'success') {\n      console.log(\"this is code: \", code);\n      var headers = {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        auth: {\n          username: '5d228af4d8fe45d5b1bb9702187643c0',\n          password: '2e64ed63024a402d81fde645767a3680'\n        }\n      };\n      var data = {\n        grant_type: 'client_credentials',\n        code: code,\n        scope: 'user-top-read'\n      };\n\n      _axios.default.post('https://accounts.spotify.com/api/token', _qs.default.stringify(data), headers).then(function (res) {\n        console.log(\"this is loginbutton: \", res);\n        var token = res.data;\n        signIn(token);\n\n        _axios.default.post(\"http://127.0.0.1:5000/json/user-token\", token).then(function (res) {\n          console.log(res);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, [response]);\n  return React.createElement(_Button.default, {\n    disabled: !request,\n    title: \"Login with Spotify\",\n    color: \"#1DB954\",\n    onPress: function onPress() {\n      promptAsync();\n      {\n        signIn();\n      }\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  });\n};\n\nvar _default = LoginButton;\nexports.default = _default;","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/components/LoginButton.tsx"],"names":["WebBrowser","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","LoginButton","React","useContext","AuthContext","signIn","clientId","scopes","usePKCE","redirectUri","request","response","promptAsync","useEffect","console","log","type","code","headers","Accept","auth","username","password","data","grant_type","scope","axios","post","qs","stringify","then","res","token","catch","err"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;;;AAGA;;AACA;;AAEA;;;;;AAEAA,UAAU,CAACC,wBAAX;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,qBAAqB,EAAE,wCADP;AAEhBC,EAAAA,aAAa,EAAE;AAFC,CAAlB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,0BAEHC,KAAK,CAACC,UAAN,CAAiBC,oBAAjB,CAFG;AAAA,MAEdC,MAFc,qBAEdA,MAFc;;AAAA,wBAImB,qCACrC;AACAC,IAAAA,QAAQ,EAAE,kCADV;AAEAC,IAAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,wBAApB,CAFR;AAKAC,IAAAA,OAAO,EAAE,KALT;AAOAC,IAAAA,WAAW,EAAE;AAPb,GADqC,EAcrCX,SAdqC,CAJnB;AAAA;AAAA,MAIfY,OAJe;AAAA,MAINC,QAJM;AAAA,MAIIC,WAJJ;;AAqBtBV,EAAAA,KAAK,CAACW,SAAN,CAAgB,YAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,QAAI,CAAAA,QAAQ,QAAR,YAAAA,QAAQ,CAAEK,IAAV,MAAmB,SAAvB,EAAkC;AAC9BF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,IAA9B;AACA,UAAMC,OAAO,GAAG;AACZA,QAAAA,OAAO,EAAE;AACTC,UAAAA,MAAM,EAAE,kBADC;AAET,0BAAgB;AAFP,SADG;AAKZC,QAAAA,IAAI,EAAE;AACNC,UAAAA,QAAQ,EAAE,kCADJ;AAENC,UAAAA,QAAQ,EAAE;AAFJ;AALM,OAAhB;AAUA,UAAMC,IAAI,GAAG;AACTC,QAAAA,UAAU,EAAE,oBADH;AAETP,QAAAA,IAAI,EAAEA,IAFG;AAGTQ,QAAAA,KAAK,EAAE;AAHE,OAAb;;AAMAC,qBAAMC,IAAN,CAAW,wCAAX,EAAqDC,YAAGC,SAAH,CAAaN,IAAb,CAArD,EAAyEL,OAAzE,EACCY,IADD,CACM,UAAAC,GAAG,EAAI;AACTjB,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCgB,GAArC;AACA,YAAMC,KAAK,GAAGD,GAAG,CAACR,IAAlB;AACAlB,QAAAA,MAAM,CAAC2B,KAAD,CAAN;;AAEAN,uBAAMC,IAAN,CAAW,uCAAX,EAAoDK,KAApD,EACCF,IADD,CACM,UAAAC,GAAG,EAAI;AACTjB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACH,SAHD,EAICE,KAJD,CAIO,UAAAC,GAAG,EAAI;AACVpB,UAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACH,SAND;AAOH,OAbD,EAcCD,KAdD,CAcO,UAAAC,GAAG,EAAI;AACVpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACH,OAhBD;AAiBH;AACJ,GAtCD,EAsCG,CAACvB,QAAD,CAtCH;AAwCA,SACI,oBAAC,eAAD;AACA,IAAA,QAAQ,EAAE,CAACD,OADX;AAEA,IAAA,KAAK,EAAC,oBAFN;AAGA,IAAA,KAAK,EAAC,SAHN;AAIA,IAAA,OAAO,EAAE,mBAAM;AACXE,MAAAA,WAAW;AACX;AAACP,QAAAA,MAAM;AAAG;AAGT,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaH,CA1ED;;eA4EeJ,W","sourcesContent":["import * as React from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button } from 'react-native';\nimport qs from 'qs';\nimport axios from 'axios';\n\nimport { AuthContext } from './context';\n\nWebBrowser.maybeCompleteAuthSession();\n\n// Endpoint\nconst discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token',\n};\n\n\nconst LoginButton = () => {\n\n    const { signIn } = React.useContext(AuthContext);\n\n    const [request, response, promptAsync] = useAuthRequest(\n        {\n        clientId: '5d228af4d8fe45d5b1bb9702187643c0',\n        scopes: ['user-read-email', 'playlist-modify-public'],\n        // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n        // this must be set to false\n        usePKCE: false,\n        // For usage in managed apps using the proxy\n        redirectUri: 'http://localhost:19006/'\n        //   redirectUri: makeRedirectUri({\n        //     // For usage in bare and standalone\n        //     native: 'https://www.google.com/',\n        //   }),\n        },\n        discovery\n    );\n\n    React.useEffect(() => {\n        console.log(response)\n        if (response?.type === 'success') {\n            console.log(\"this is code: \", code)\n            const headers = {\n                headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                auth: {\n                username: '5d228af4d8fe45d5b1bb9702187643c0',\n                password: '2e64ed63024a402d81fde645767a3680',\n                },\n            };\n            const data = {\n                grant_type: 'client_credentials',\n                code: code,\n                scope: 'user-top-read'\n            };\n\n            axios.post('https://accounts.spotify.com/api/token', qs.stringify(data), headers)\n            .then(res => {\n                console.log(\"this is loginbutton: \", res)\n                const token = res.data;\n                signIn(token);\n\n                axios.post(\"http://127.0.0.1:5000/json/user-token\", token)\n                .then(res => {\n                    console.log(res)\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }\n    }, [response]);\n\n    return (\n        <Button\n        disabled={!request}\n        title=\"Login with Spotify\"\n        color=\"#1DB954\"\n        onPress={() => {\n            promptAsync();\n            {signIn()}\n            // navigation.navigate('TabOne', { name: 'TabOne' })\n            // response?.type === 'success' ? props.navigation.navigate('Home')\n            }}\n        />\n    );\n}\n\nexport default LoginButton"]},"metadata":{},"sourceType":"script"}