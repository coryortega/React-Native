{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _Themed = require(\"../components/Themed\");\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\n\nvar _context3 = require(\"../components/context\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx\";\n\nvar Login = function Login() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      loggedIn = _React$useState2[0],\n      setLoggedIn = _React$useState2[1];\n\n  var getData = function getData() {\n    var value;\n    return _regenerator.default.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('token'));\n\n          case 3:\n            value = _context.sent;\n\n            if (!(value !== null)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", value);\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var logOut = function logOut() {\n    return _regenerator.default.async(function logOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regenerator.default.awrap(_asyncStorage.default.removeItem(\"token\"));\n\n          case 3:\n            setLoggedIn(false);\n            return _context2.abrupt(\"return\", true);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", false);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  React.useEffect(function () {\n    getData().then(function (res) {\n      if (res) {\n        setLoggedIn(true);\n      } else {\n        setLoggedIn(false);\n      }\n    });\n  });\n\n  var _React$useContext = React.useContext(_context3.AuthContext),\n      signIn = _React$useContext.signIn;\n\n  return React.createElement(_Themed.View, {\n    style: styles.container,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(_Button.default, {\n    onPress: function onPress() {\n      return logOut().then(function (res) {\n        return console.log(res);\n      });\n    },\n    title: \"Log Out\",\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  }), React.createElement(_Themed.View, {\n    style: styles.separator,\n    lightColor: \"#eee\",\n    darkColor: \"rgba(255,255,255,0.1)\",\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});\n\nvar _default = Login;\nexports.default = _default;","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx"],"names":["Login","React","useState","loggedIn","setLoggedIn","getData","AsyncStorage","getItem","value","console","log","logOut","removeItem","useEffect","then","res","useContext","AuthContext","signIn","styles","container","separator","StyleSheet","create","flex","alignItems","justifyContent","title","fontSize","fontWeight","marginVertical","height","width"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;AAKA;;AAEA;;AACA;;;;;AAIA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,wBAEeC,KAAK,CAACC,QAAN,CAAe,KAAf,CAFf;AAAA;AAAA,MAEXC,QAFW;AAAA,MAEDC,WAFC;;AAIlB,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEQC,sBAAaC,OAAb,CAAqB,OAArB,CAFR;;AAAA;AAENC,YAAAA,KAFM;;AAAA,kBAGTA,KAAK,KAAK,IAHD;AAAA;AAAA;AAAA;;AAAA,6CAIHA,KAJG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOZC,YAAAA,OAAO,CAACC,GAAR;;AAPY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAWA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEHL,sBAAaM,UAAb,CAAwB,OAAxB,CAFG;;AAAA;AAGTR,YAAAA,WAAW,CAAC,KAAD,CAAX;AAHS,8CAIF,IAJE;;AAAA;AAAA;AAAA;AAAA,8CAOF,KAPE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAWAH,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpBR,IAAAA,OAAO,GAAGS,IAAV,CAAe,UAAAC,GAAG,EAAI;AACpB,UAAGA,GAAH,EAAO;AACLX,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAFD,MAEO;AACLA,QAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,KAND;AAOD,GARD;;AA1BkB,0BAoCCH,KAAK,CAACe,UAAN,CAAiBC,qBAAjB,CApCD;AAAA,MAoCVC,MApCU,qBAoCVA,MApCU;;AAsClB,SACE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,eAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMT,MAAM,GAAGG,IAAT,CAAc,UAAAC,GAAG;AAAA,eAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAAJ;AAAA,OAAjB,CAAN;AAAA,KAAjB;AAA+D,IAAA,KAAK,EAAC,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACE,SAApB;AAA+B,IAAA,UAAU,EAAC,MAA1C;AAAiD,IAAA,SAAS,EAAC,uBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA5CD;;AA8CA,IAAMF,MAAM,GAAGG,oBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAVoB,CAAlB,CAAf;;eAiBehC,K","sourcesContent":["import * as React from 'react';\nimport LoginButton from '../components/LoginButton';\nimport { StyleSheet, Button } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext } from '../components/context'\n;\n// import authHandler from \"../components/utils/authenticationHandler\";\n\nconst Login = () => {\n\n  const [loggedIn, setLoggedIn ] = React.useState(false)\n\n  const getData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('token')\n      if(value !== null) {\n        return value\n      }\n    } catch(e) {\n      console.log(e)\n    }\n  }\n  \n  const logOut = async () => {\n    try {\n        await AsyncStorage.removeItem(\"token\");\n        setLoggedIn(false)\n        return true;\n    }\n    catch(exception) {\n        return false;\n    }\n  }\n\n  React.useEffect(() => {\n    getData().then(res => {\n      if(res){\n        setLoggedIn(true)\n      } else {\n        setLoggedIn(false)\n      }\n    })\n  })\n\n  const { signIn } = React.useContext(AuthContext);\n\n  return (\n    <View style={styles.container}>\n      {<Button onPress={() => logOut().then(res => console.log(res))} title=\"Log Out\"/>}\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n\nexport default Login\n"]},"metadata":{},"sourceType":"script"}