{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar WebBrowser = _interopRequireWildcard(require(\"expo-web-browser\"));\n\nvar _expoAuthSession = require(\"expo-auth-session\");\n\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _context = require(\"./context\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/components/LoginButton.tsx\";\n\nWebBrowser.maybeCompleteAuthSession();\nvar discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token'\n};\nvar scopes = [\"streaming\", \"user-read-currently-playing\", \"user-read-playback-state\", \"user-library-read\", \"user-library-modify\", \"user-modify-playback-state\", \"user-read-email\", \"user-read-private\", \"playlist-modify-public\", \"playlist-modify-private\"];\nvar config = {\n  clientId: '5d228af4d8fe45d5b1bb9702187643c0',\n  clientSecret: '2e64ed63024a402d81fde645767a3680',\n  redirectUrl: _Platform.default.OS === 'ios' ? 'exp://ep-rs6.coryortega.react-native.exp.direct:80' : 'http://localhost:19006/',\n  scopes: scopes,\n  serviceConfiguration: {\n    authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n    tokenEndpoint: 'https://accounts.spotify.com/api/token'\n  }\n};\n\nvar LoginButton = function LoginButton(props) {\n  var scopes = [\"streaming\", \"user-read-currently-playing\", \"user-read-playback-state\", \"user-library-read\", \"user-library-modify\", \"user-modify-playback-state\", \"user-read-email\", \"user-read-private\", \"playlist-modify-public\", \"playlist-modify-private\"];\n\n  var _React$useContext = React.useContext(_context.AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var _useAuthRequest = (0, _expoAuthSession.useAuthRequest)({\n    clientId: '5d228af4d8fe45d5b1bb9702187643c0',\n    scopes: ['user-read-email', 'playlist-modify-public', 'user-top-read'],\n    usePKCE: false,\n    redirectUri: _Platform.default.OS === 'ios' ? 'exp://ep-rs6.coryortega.react-native.exp.direct:80' : 'http://localhost:19006/'\n  }, discovery),\n      _useAuthRequest2 = (0, _slicedToArray2.default)(_useAuthRequest, 3),\n      request = _useAuthRequest2[0],\n      response = _useAuthRequest2[1],\n      promptAsync = _useAuthRequest2[2];\n\n  React.useEffect(function () {}, []);\n  return React.createElement(_Button.default, {\n    disabled: !request,\n    title: \"Login with Spotify\",\n    color: _Platform.default.OS === 'ios' ? 'white' : '#e21051',\n    onPress: function onPress() {\n      console.log('signing in');\n      console.log(auth());\n      promptAsync();\n    },\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  });\n};\n\nvar _default = LoginButton;\nexports.default = _default;","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/components/LoginButton.tsx"],"names":["WebBrowser","maybeCompleteAuthSession","discovery","authorizationEndpoint","tokenEndpoint","scopes","config","clientId","clientSecret","redirectUrl","Platform","OS","serviceConfiguration","LoginButton","props","React","useContext","AuthContext","signIn","usePKCE","redirectUri","request","response","promptAsync","useEffect","console","log","auth"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAMA;;;;;AAGAA,UAAU,CAACC,wBAAX;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,qBAAqB,EAAE,wCADP;AAEhBC,EAAAA,aAAa,EAAE;AAFC,CAAlB;AAKA,IAAMC,MAAM,GACJ,CACI,WADJ,EAEI,6BAFJ,EAGI,0BAHJ,EAII,mBAJJ,EAKI,qBALJ,EAMI,4BANJ,EAOI,iBAPJ,EAQI,mBARJ,EASI,wBATJ,EAUI,yBAVJ,CADR;AAcA,IAAMC,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE,kCADC;AAEXC,EAAAA,YAAY,EAAE,kCAFH;AAGXC,EAAAA,WAAW,EAAEC,kBAASC,EAAT,KAAgB,KAAhB,GAAwB,oDAAxB,GAA+E,yBAHjF;AAIXN,EAAAA,MAAM,EAAEA,MAJG;AAKXO,EAAAA,oBAAoB,EAAE;AACpBT,IAAAA,qBAAqB,EAAE,wCADH;AAEpBC,IAAAA,aAAa,EAAE;AAFK;AALX,CAAf;;AAYA,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAgB;AAEhC,MAAIT,MAAM,GACN,CACI,WADJ,EAEI,6BAFJ,EAGI,0BAHJ,EAII,mBAJJ,EAKI,qBALJ,EAMI,4BANJ,EAOI,iBAPJ,EAQI,mBARJ,EASI,wBATJ,EAUI,yBAVJ,CADJ;;AAFgC,0BAiBbU,KAAK,CAACC,UAAN,CAAiBC,oBAAjB,CAjBa;AAAA,MAiBxBC,MAjBwB,qBAiBxBA,MAjBwB;;AAAA,wBAmBS,qCACrC;AACAX,IAAAA,QAAQ,EAAE,kCADV;AAEAF,IAAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,wBAApB,EAA8C,eAA9C,CAFR;AAKAc,IAAAA,OAAO,EAAE,KALT;AAOAC,IAAAA,WAAW,EAAEV,kBAASC,EAAT,KAAgB,KAAhB,GAAwB,oDAAxB,GAA+E;AAP5F,GADqC,EAcrCT,SAdqC,CAnBT;AAAA;AAAA,MAmBzBmB,OAnByB;AAAA,MAmBhBC,QAnBgB;AAAA,MAmBNC,WAnBM;;AAoChCR,EAAAA,KAAK,CAACS,SAAN,CAAgB,YAAM,CAgCrB,CAhCD,EAgCG,EAhCH;AAkCA,SACI,oBAAC,eAAD;AACA,IAAA,QAAQ,EAAE,CAACH,OADX;AAEA,IAAA,KAAK,EAAC,oBAFN;AAIA,IAAA,KAAK,EAAEX,kBAASC,EAAT,KAAgB,KAAhB,GAAwB,OAAxB,GAAkC,SAJzC;AAKA,IAAA,OAAO,EAAE,mBAAM;AACXc,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,EAAhB;AACAJ,MAAAA,WAAW;AAGV,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeH,CArFD;;eAuFeV,W","sourcesContent":["import * as React from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, useAuthRequest } from 'expo-auth-session';\nimport { Platform, StyleSheet, Button } from 'react-native';\nimport qs from 'qs';\nimport axios from 'axios';\nimport {authorize, refresh} from 'react-native-app-auth';\n\nimport { AuthContext } from './context';\nimport Navigation from '../navigation';\n\nWebBrowser.maybeCompleteAuthSession();\n\n// Endpoint\nconst discovery = {\n  authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n  tokenEndpoint: 'https://accounts.spotify.com/api/token',\n};\n\nconst scopes = \n        [\n            \"streaming\",\n            \"user-read-currently-playing\",\n            \"user-read-playback-state\",\n            \"user-library-read\",\n            \"user-library-modify\",\n            \"user-modify-playback-state\",\n            \"user-read-email\",\n            \"user-read-private\",\n            \"playlist-modify-public\",\n            \"playlist-modify-private\"\n          ];\n\nconst config = {\n    clientId: '5d228af4d8fe45d5b1bb9702187643c0', // available on the app page\n    clientSecret: '2e64ed63024a402d81fde645767a3680', // click \"show client secret\" to see this\n    redirectUrl: Platform.OS === 'ios' ? 'exp://ep-rs6.coryortega.react-native.exp.direct:80' : 'http://localhost:19006/', // the redirect you defined after creating the app\n    scopes: scopes, // the scopes you need to access\n    serviceConfiguration: {\n      authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n      tokenEndpoint: 'https://accounts.spotify.com/api/token',\n    },\n  };\n\n\nconst LoginButton = (props: any) => {\n\n    let scopes = \n        [\n            \"streaming\",\n            \"user-read-currently-playing\",\n            \"user-read-playback-state\",\n            \"user-library-read\",\n            \"user-library-modify\",\n            \"user-modify-playback-state\",\n            \"user-read-email\",\n            \"user-read-private\",\n            \"playlist-modify-public\",\n            \"playlist-modify-private\"\n          ];\n\n\n    const { signIn } = React.useContext(AuthContext);\n\n    const [request, response, promptAsync] = useAuthRequest(\n        {\n        clientId: '5d228af4d8fe45d5b1bb9702187643c0',\n        scopes: ['user-read-email', 'playlist-modify-public', 'user-top-read'],\n        // In order to follow the \"Authorization Code Flow\" to fetch token after authorizationEndpoint\n        // this must be set to false\n        usePKCE: false,\n        // For usage in managed apps using the proxy\n        redirectUri: Platform.OS === 'ios' ? 'exp://ep-rs6.coryortega.react-native.exp.direct:80' : 'http://localhost:19006/'\n        // redirectUri: makeRedirectUri({\n        //     // For usage in bare and standalone\n        //     native: 'your.app://redirect',\n        //   }),\n        },\n        discovery\n    );\n\n    React.useEffect(() => {\n        // if (response?.type === 'success') {\n        //     const { code } = response.params;\n        //     console.log(\"response 1 =\", response)\n        //     const headers = {\n        //         headers: {\n        //         Accept: 'application/json',\n        //         'Content-Type': 'application/x-www-form-urlencoded',\n        //         },\n        //         auth: {\n        //         username: '5d228af4d8fe45d5b1bb9702187643c0',\n        //         password: '2e64ed63024a402d81fde645767a3680',\n        //         },\n        //     };\n        //     const data = {\n        //         grant_type: 'client_credentials',\n        //         code: code,\n        //         scopes:\"streaming user-read-currently-playing user-read-playback-state user-library-read user-library-modify user-modify-playback-state user-read-email user-read-private playlist-modify-public playlist-modify-private\"\n        //     };\n\n        //     axios.post('https://accounts.spotify.com/api/token', qs.stringify(data), headers)\n        //     .then(res => {\n        //         console.log(\"response 2 =\", res)\n        //         const token = res.data;\n        //         console.log(\"this is token:\", token)\n        //         signIn(token.access_token);\n        //         // props.navigation.navigate('Login')\n        //     })\n        //     .catch(err => {\n        //         console.log(err)\n        //     })\n        // }\n    }, []);\n//response\n    return (\n        <Button\n        disabled={!request}\n        title=\"Login with Spotify\"\n        // style={styles.button}\n        color={Platform.OS === 'ios' ? 'white' : '#e21051'}\n        onPress={() => {\n            console.log('signing in');\n            console.log(auth())\n            promptAsync();\n            // navigation.navigate('TabOne', { name: 'TabOne' })\n            // response?.type === 'success' ? props.navigation.navigate('Home')\n            }}\n        />\n    );\n}\n\nexport default LoginButton"]},"metadata":{},"sourceType":"script"}