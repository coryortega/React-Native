{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Themed = require(\"../components/Themed\");\n\nvar _LoginButton = _interopRequireDefault(require(\"../components/LoginButton\"));\n\nvar _this = this,\n    _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Login = function Login() {\n  return React.createElement(_Themed.View, {\n    style: styles.container,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(_Themed.View, {\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(_Themed.Text, {\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Hello\")), React.createElement(_Themed.View, {\n    style: styles.loginScreenButton,\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(_LoginButton.default, {\n    __self: _this,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  subTitle: {\n    fontSize: 18,\n    fontWeight: '200'\n  },\n  backgroundWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  background: {},\n  loginScreenButton: _objectSpread({}, _Platform.default.select({\n    ios: {\n      marginRight: 40,\n      marginLeft: 40,\n      marginTop: 10,\n      paddingTop: 8,\n      width: '60%',\n      paddingBottom: 8,\n      backgroundColor: '#e21051',\n      borderRadius: 10,\n      borderWidth: 1\n    },\n    default: {\n      backgroundColor: 'blue'\n    }\n  })),\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  wrapper: {\n    textAlign: 'center',\n    width: '50%',\n    marginBottom: 15\n  }\n});\n\nvar _default = Login;\nexports.default = _default;","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx"],"names":["Login","styles","container","loginScreenButton","StyleSheet","create","flex","flexDirection","alignItems","justifyContent","title","fontSize","fontWeight","subTitle","backgroundWrapper","position","top","left","right","bottom","background","Platform","select","ios","marginRight","marginLeft","marginTop","paddingTop","width","paddingBottom","backgroundColor","borderRadius","borderWidth","default","separator","marginVertical","height","wrapper","textAlign","marginBottom"],"mappings":";;;;;;;;;;;AAAA;;;;;;AAEA;;AACA;;;;;;;;;AAKA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;AAElB,SACE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CANF,EAYE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF;AAmBD,CArBD;;AAuBA,IAAMF,MAAM,GAAGG,oBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,gBAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GAPwB;AAW/BC,EAAAA,QAAQ,EAAE;AACRF,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAXqB;AAe/BE,EAAAA,iBAAiB,EAAE;AAEjBC,IAAAA,QAAQ,EAAE,UAFO;AAGjBC,IAAAA,GAAG,EAAE,CAHY;AAIjBC,IAAAA,IAAI,EAAE,CAJW;AAKjBC,IAAAA,KAAK,EAAE,CALU;AAMjBC,IAAAA,MAAM,EAAE,CANS;AAOjBV,IAAAA,cAAc,EAAE,QAPC;AAQjBD,IAAAA,UAAU,EAAE;AARK,GAfY;AAyB/BY,EAAAA,UAAU,EAAE,EAzBmB;AAgC/BjB,EAAAA,iBAAiB,oBACZkB,kBAASC,MAAT,CAAgB;AACjBC,IAAAA,GAAG,EAAC;AACFC,MAAAA,WAAW,EAAC,EADV;AAEFC,MAAAA,UAAU,EAAC,EAFT;AAGFC,MAAAA,SAAS,EAAC,EAHR;AAIFC,MAAAA,UAAU,EAAC,CAJT;AAKFC,MAAAA,KAAK,EAAE,KALL;AAMFC,MAAAA,aAAa,EAAC,CANZ;AAOFC,MAAAA,eAAe,EAAC,SAPd;AAQFC,MAAAA,YAAY,EAAC,EARX;AASFC,MAAAA,WAAW,EAAE;AATX,KADa;AAYjBC,IAAAA,OAAO,EAAE;AAEPH,MAAAA,eAAe,EAAE;AAFV;AAZQ,GAAhB,CADY,CAhCc;AAmD/BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTR,IAAAA,KAAK,EAAE;AAHE,GAnDoB;AAwD/BS,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,QADJ;AAEPV,IAAAA,KAAK,EAAE,KAFA;AAGPW,IAAAA,YAAY,EAAE;AAHP;AAxDsB,CAAlB,CAAf;;eA+DevC,K","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport { Text, View} from '../components/Themed';\nimport LoginButton from '../components/LoginButton';\nimport Album_background from '../assets/images/albumsbackground.svg';\n// import authHandler from \"../components/utils/authenticationHandler\";\nimport SvgBackground from '../assets/SvgBackground';\n\nconst Login = () => {\n\n  return (\n    <View style={styles.container}>\n      {/* <View style={styles.wrapper}>\n        <Text style={styles.title}>Discover songs by their traits</Text>\n        <Text style={styles.subTitle}>please sign in with your Spotify account</Text>\n        <LoginButton/>\n      </View> */}\n      <View>\n        <Text>Hello</Text>\n      </View>\n      {/* <View style={styles.backgroundWrapper}>\n        <SvgBackground style={styles.background}/>\n      </View> */}\n      <View style={styles.loginScreenButton}>\n        <LoginButton/>\n      </View>\n      {/* <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" /> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  subTitle: {\n    fontSize: 18,\n    fontWeight: '200',\n  },\n  backgroundWrapper: {\n    // width: '50%'\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  background: {\n    // width: '50%',\n    // height:'80%',\n    // flex: 1,\n    // resizeMode: 'stretch',\n\n  },\n  loginScreenButton:{\n    ...Platform.select({\n      ios:{\n        marginRight:40,\n        marginLeft:40,\n        marginTop:10,\n        paddingTop:8,\n        width: '60%',\n        paddingBottom:8,\n        backgroundColor:'#e21051',\n        borderRadius:10,\n        borderWidth: 1,\n      },\n      default: {\n        // other platforms, web for example\n        backgroundColor: 'blue'\n      }\n    })\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  wrapper: {\n    textAlign: 'center',\n    width: '50%',\n    marginBottom: 15\n  }\n});\n\nexport default Login\n"]},"metadata":{},"sourceType":"script"}