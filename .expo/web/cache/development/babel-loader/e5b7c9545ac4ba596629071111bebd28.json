{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Login;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _LoginButton = _interopRequireDefault(require(\"../components/LoginButton\"));\n\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\n\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\n\nvar _EditScreenInfo = _interopRequireDefault(require(\"../components/EditScreenInfo\"));\n\nvar _Themed = require(\"../components/Themed\");\n\nvar _jsxFileName = \"/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx\";\n\nfunction Login() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      loggedIn = _React$useState2[0],\n      setLoggedIn = _React$useState2[1];\n\n  getData().then(function (res) {\n    if (res !== null) {\n      setLoggedIn(true);\n    } else {\n      setLoggedIn(false);\n    }\n  });\n  console.log(loggedIn);\n  return React.createElement(_Themed.View, {\n    style: styles.container,\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, loggedIn ? React.createElement(_Button.default, {\n    onPress: function onPress() {\n      return removeItemValue(\"code\").then(function (res) {\n        return console.log(res);\n      });\n    },\n    title: \"Log Out\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }) : React.createElement(_LoginButton.default, {\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 117\n    }\n  }), React.createElement(_Themed.View, {\n    style: styles.separator,\n    lightColor: \"#eee\",\n    darkColor: \"rgba(255,255,255,0.1)\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(_EditScreenInfo.default, {\n    path: \"/screens/TabTwoScreen.tsx\",\n    __self: this,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = _StyleSheet.default.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});","map":{"version":3,"sources":["/Users/coryortega/Desktop/Projects/React-Native/screens/LoginScreen.tsx"],"names":["Login","React","useState","loggedIn","setLoggedIn","getData","then","res","console","log","styles","container","removeItemValue","separator","StyleSheet","create","flex","alignItems","justifyContent","title","fontSize","fontWeight","marginVertical","height","width"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;AAGA;;AACA;;;;AAOe,SAASA,KAAT,GAAiB;AAAA,wBAEGC,KAAK,CAACC,QAAN,CAAe,KAAf,CAFH;AAAA;AAAA,MAEvBC,QAFuB;AAAA,MAEbC,WAFa;;AAI9BC,EAAAA,OAAO,GAAGC,IAAV,CAAe,UAAAC,GAAG,EAAI;AACpB,QAAGA,GAAG,KAAK,IAAX,EAAgB;AACdH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAND;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,SACE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGR,QAAQ,GAAG,oBAAC,eAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMS,eAAe,CAAC,MAAD,CAAf,CAAwBN,IAAxB,CAA6B,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAAhC,CAAN;AAAA,KAAjB;AAA8E,IAAA,KAAK,EAAC,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqG,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFhH,EAIE,oBAAC,YAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACG,SAApB;AAA+B,IAAA,UAAU,EAAC,MAA1C;AAAiD,IAAA,SAAS,EAAC,uBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,uBAAD;AAAgB,IAAA,IAAI,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAED,IAAMH,MAAM,GAAGI,oBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAVoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport LoginButton from '../components/LoginButton';\nimport { StyleSheet, Button } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n// import authHandler from \"../components/utils/authenticationHandler\";\n\n\nexport default function Login() {\n\n  const [loggedIn, setLoggedIn ] = React.useState(false)\n\n  getData().then(res => {\n    if(res !== null){\n      setLoggedIn(true)\n    } else {\n      setLoggedIn(false)\n    }\n  })\n  console.log(loggedIn)\n  return (\n    <View style={styles.container}>\n      {/* <Text style={styles.title}>Login</Text> */}\n      {loggedIn ? <Button onPress={() => removeItemValue(\"code\").then(res => console.log(res))} title=\"Log Out\"/> : <LoginButton/>}\n      {/* <LoginButton/> */}\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabTwoScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n\n\n"]},"metadata":{},"sourceType":"script"}